image: ubuntu:18.04
services:
    - docker:dind

stages:
    - build
    - test
    - deploy

before_script:
    # установка pip
    - apt-get update
#    - apt install linux-image-extra-$(uname -r) linux-image-extra-virtual
#    - apt install apt-transport-https ca-certificates curl software-properties-common
#    - url -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
#    - add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu bionic stable"
#    - apt update && apt-cache policy docker-ce
#    - apt install -y docker-ce
    # установка docker-compose
    - pip3 install docker-compose==1.9.0
    # логин в Gitlab Docker registry
#    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY
    - apt-get -y install python3-pip
    - apt-get -y install python3-psycopg2
    - pip3 install -r requirements.txt

# Сборка Docker-образа
build:
    stage: build
    script:
        # собственно сборка
        - docker-compose build
        # отправка собранного в registry
        - docker-compose push

# Прогон тестов
test:
    stage: test
#    before_script:
#        - apk add python3
#        - apk add --no-cache py3-pip
#        - apk update && apk add postgresql-dev gcc python3-dev musl-dev
#        - pip3 install psycopg2-binary
#        - pip3 install -r requirements.txt
    script:
        - pytest statistics_test.py
        - pytest --cov=weather_statistics_app statistics_test.py
    coverage: '/^(?i)(TOTAL).*\s+(\d+\%)$/'

deploy:
  stage: deploy
  script:
    - apt install -y git
    - touch file
    - git init
    - git add .
    - git config --global user.email "$email"
    - git config --global user.name "$name"
    - git commit -m "deploy"
    - apt install -y curl
    - apt-get update -qy
    - apt-get install -y ruby-dev
    - gem install dpl
    - dpl --provider=heroku --app=weather-statistics1 --api-key=$HEROKU_STAGING_API_KEY
  environment:
    name: staging
    url: https://weather-statistics1.herokuapp.com/
  only:
  - master
