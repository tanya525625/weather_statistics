image: ubuntu:18.04
services:
    - docker:dind

stages:
    - build
    - test
    - deploy

before_script:
    # установка pip
    - apt-get update
    - apt install -y curl
    - apt install linux-image-extra-$(uname -r) linux-image-extra-virtual
    - apt install apt-transport-https ca-certificates curl software-properties-common
    - curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
    - add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu bionic stable"
    - apt update && apt-cache policy docker-ce
    - apt install -y docker-ce
    - curl -fsSL https://get.docker.com -o get-docker.sh
    - sh get-docker.sh
    # установка docker-compose
    - pip3 install docker-compose==1.9.0
    # логин в Gitlab Docker registry
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY

## Сборка Docker-образа
#build:
#    stage: build
#    script:
#        # собственно сборка
#        - docker-compose build
#        # отправка собранного в registry
#        - docker-compose push

# Прогон тестов
test:
    stage: test
    before_script:
        - apt-get update
        - apt-get -y install python3-pip
        - apt-get -y install python3-psycopg2
        - pip3 install -r requirements.txt
    script:
        - pytest statistics_test.py
        - pytest --cov=weather_statistics_app statistics_test.py
    coverage: '/^(?i)(TOTAL).*\s+(\d+\%)$/'

deploy:
  stage: deploy
  script:
    - apt install -y git
    - touch file
    - git init
    - git add .
    - git config --global user.email "$email"
    - git config --global user.name "$name"
    - git commit -m "deploy"
    - apt-get update -qy
    - apt-get install -y ruby-dev
    - gem install dpl
    - dpl --provider=heroku --app=weather-statistics1 --api-key=$HEROKU_STAGING_API_KEY
  environment:
    name: staging
    url: https://weather-statistics1.herokuapp.com/
  only:
  - master
